---
import "@fontsource-variable/inter";
import "@fontsource-variable/jetbrains-mono";
import "@fontsource-variable/space-grotesk";

import { ColorModeToggle } from "@/components/react/ColorModeToggle";
import Controls from "@/components/astro/Controls.astro";
import ScrollHome from "@/components/astro/ScrollHome.astro";

import "@/styles/globals.css";
import { Menu } from "@/components/react/Menu";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    <Controls>
      <ScrollHome />
      <Menu
        client:only
        links={[
          { href: "/", label: "Home" },
          { href: "/#about", label: "Sobre mim" },
          { href: "/#services", label: "ServiÃ§os" },
          { href: "/#skills", label: "Habilidades" },
          { href: "/#projects", label: "Projetos" },
          { href: "/#contact", label: "Contato" },
        ]}
      />
      <ColorModeToggle client:load />
    </Controls>
    <script>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        )
          return localStorage.getItem("theme");

        return "dark";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </body>
</html>
